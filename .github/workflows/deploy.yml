name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  S3_BUCKET_NAME: elasticbeanstalk-us-east-1-274949446217
  APP_NAME: themedo-server
  DEPLOY_FOLDER: themedo-server

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Zip build folder
        run: |
          mkdir -p deployment
          cp -r dist/* deployment/
          cp package.json package-lock.json deployment/
          cd deployment
          zip -r ../${{ github.sha }}-${{ github.run_number }}.zip .
          cd ..

      - name: Check zip contents
        run: unzip -l ${{ github.sha }}-${{ github.run_number }}.zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload zip to S3
        run: |
          aws s3 cp "${{ github.sha }}-${{ github.run_number }}.zip" "s3://${{ env.S3_BUCKET_NAME }}/${{ env.DEPLOY_FOLDER }}/${{ github.sha }}-${{ github.run_number }}.zip"

      - name: Create new Elastic Beanstalk app version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "${{ env.APP_NAME }}" \
            --version-label "${{ github.sha }}-${{ github.run_number }}" \
            --source-bundle S3Bucket="${{ env.S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_FOLDER }}/${{ github.sha }}-${{ github.run_number }}.zip" \
            --region "${{ env.AWS_REGION }}"

      - name: Wait for version to be PROCESSED
        run: |
          for i in {1..15}; do
            STATUS=$(aws elasticbeanstalk describe-application-versions \
              --application-name "${{ env.APP_NAME }}" \
              --version-labels "${{ github.sha }}-${{ github.run_number }}" \
              --query 'ApplicationVersions[0].Status' \
              --output text \
              --region "${{ env.AWS_REGION }}")

            echo "Status: $STATUS"

            if [ "$STATUS" = "PROCESSED" ]; then
              echo "âœ… Version is processed"
              break
            fi

            echo "Waiting... ($i/15)"
            sleep 10
          done

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "${{ secrets.EB_ENVIRONMENT_NAME }}" \
            --version-label "${{ github.sha }}-${{ github.run_number }}" \
            --region "${{ env.AWS_REGION }}"
