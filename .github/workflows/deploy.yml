name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  S3_BUCKET_NAME: elasticbeanstalk-us-east-1-274949446217
  DEPLOY_PACKAGE_NAME: deployment.zip

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Zip build folder
        run: |
          mkdir -p deployment
          cp -r dist/* deployment/
          cp package.json package-lock.json deployment/
          cd deployment
          zip -r ../${{ env.DEPLOY_PACKAGE_NAME }} .
          cd ..

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload zip to S3
        run: |
          export VERSION_LABEL="${{ github.sha }}-${{ github.run_number }}"
          export S3_KEY="themedo-server/$VERSION_LABEL.zip"
          echo "Uploading to S3 path: $S3_KEY"
          aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.S3_BUCKET_NAME }}/$S3_KEY
          echo "S3_KEY=$S3_KEY" >> $GITHUB_ENV
          echo "VERSION_LABEL=$VERSION_LABEL" >> $GITHUB_ENV

      - name: Create new Elastic Beanstalk app version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "${{ secrets.EB_APPLICATION_NAME }}" \
            --version-label "$VERSION_LABEL" \
            --source-bundle S3Bucket="${{ env.S3_BUCKET_NAME }}",S3Key="$S3_KEY" \
            --region "${{ env.AWS_REGION }}"

      - name: Wait for application version to be processed
        run: |
          VERSION_LABEL="$VERSION_LABEL"
          echo "Waiting for application version $VERSION_LABEL to be PROCESSED..."
          for i in {1..10}; do
            STATUS=$(aws elasticbeanstalk describe-application-versions \
              --application-name "${{ secrets.EB_APPLICATION_NAME }}" \
              --version-labels "$VERSION_LABEL" \
              --query 'ApplicationVersions[0].Status' \
              --output text \
              --region "${{ env.AWS_REGION }}")

            echo "Status: $STATUS"

            if [ "$STATUS" = "PROCESSED" ]; then
              echo "Application version is ready."
              break
            fi

            echo "Still waiting... ($i/10)"
            sleep 10
          done

      - name: Deploy app version to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "${{ secrets.EB_ENVIRONMENT_NAME }}" \
            --version-label "$VERSION_LABEL" \
            --region "${{ env.AWS_REGION }}"
