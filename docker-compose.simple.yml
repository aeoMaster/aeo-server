# =============================================================================
# Docker Compose - Simple Production (Single Container)
# =============================================================================
# Usage: docker-compose -f docker-compose.simple.yml up -d
# This runs a single container without blue-green deployment
# =============================================================================

services:
  # ---------------------------------------------------------------------------
  # Node.js Application - Single Instance
  # ---------------------------------------------------------------------------
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: aeo-server
    restart: always
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      # Database (MongoDB Atlas + Cloud Redis)
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=redis://redis:6379
      # Auth Configuration
      - AUTH_PROVIDER=${AUTH_PROVIDER}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      # Cognito Configuration
      - COGNITO_REGION=${COGNITO_REGION}
      - COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID}
      - COGNITO_APP_CLIENT_ID=${COGNITO_APP_CLIENT_ID}
      - COGNITO_DOMAIN=${COGNITO_DOMAIN}
      - OAUTH_REDIRECT_URI=${OAUTH_REDIRECT_URI}
      - OAUTH_LOGOUT_REDIRECT_URI=${OAUTH_LOGOUT_REDIRECT_URI}
      - SESSION_SECRET=${SESSION_SECRET}
      - SESSION_TTL_SECONDS=${SESSION_TTL_SECONDS}
      - COOKIE_NAME=${COOKIE_NAME}
      # OAuth Configuration
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - LINKEDIN_CLIENT_ID=${LINKEDIN_CLIENT_ID}
      - LINKEDIN_CLIENT_SECRET=${LINKEDIN_CLIENT_SECRET}
      - LINKEDIN_REDIRECT_URI=${LINKEDIN_REDIRECT_URI}
      # Frontend URLs
      - CLIENT_URL=${CLIENT_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_FROM_EMAIL=${SENDGRID_FROM_EMAIL}
      - SENDGRID_TEMPLATE_IDS=${SENDGRID_TEMPLATE_IDS}
      - USE_MOCK_EMAIL=${USE_MOCK_EMAIL}
      - PAGESPEED_API_KEY=${PAGESPEED_API_KEY}
      # AWS Configuration
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:5000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
